#!/srv/slashdev/local/bin/perl -w
# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2005 by Open Source Technology Group. See README
# and COPYING for more information, or see http://slashcode.com/.
# $Id$

# This is the plugin install script.
# -Brian (brian@tangent.org)

use strict;
use File::Basename;
use FindBin '$Bin';
use Getopt::Std;
use File::Copy;
use Slash;
use Slash::Utility;
use Slash::DB;
use Slash::DB::Upgrade;

(my $VERSION) = ' $Revision$ ' =~ /\$Revision:\s+([^\s]+)/;
my $PROGNAME = basename($0);
(my $SLASH_PREFIX = $Bin) =~ s|/[^/]+/?$||;

my %opts;
# Remember to doublecheck these match usage()!
usage() unless getopts('hvlu:L:', \%opts);
usage() if ($opts{'h'} || !keys %opts);
version() if $opts{'v'};
$opts{'u'} ||= 'slash';

$| = 1;

unless (DBIx::Password::checkVirtualUser($opts{'u'})) {
	print "You did not supply a valid DBIx::Password virtual name($opts{'u'}).\n";
	exit;
}

createEnvironment($opts{'u'});

{
    my $upgrade = Slash::DB::Upgrade->new($opts{'u'});
    my $current_schema = $upgrade->getSchemaVersions();
    
    # Just list, do nothing else
    if($opts{'l'}) {
        print ("schema\t\t\tversion\n");
        while (my ($key, $value) = each %$current_schema) {
            print ("$key\t\t\t$value");
        }
        exit; # just bail out
    }

    exit;
}

sub usage {
	print "*** $_[0]\n" if $_[0];
	# Remember to doublecheck these match getopts()!
	print <<EOT;

Usage: $PROGNAME [OPTIONS]

Upgrades Slash Database

Main options:
	-h	Help (this message)
	-v	Version
	-u	Virtual user (default is "slash")
	-l	Does not upgrade, just reports DB versions

EOT
	exit;
}

sub version {
	print <<EOT;

$PROGNAME $VERSION

This code is a part of Slash, and is released under the GPL.
Copyright 1997-2005 by Open Source Technology Group. See README
and COPYING for more information, or see http://slashcode.com/.

EOT
	exit;
}

__END__
