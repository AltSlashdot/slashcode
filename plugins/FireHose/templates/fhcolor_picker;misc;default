
__section__
default
__description__
A vertical menu with animation for selecting the color threshold in the Firehose.
__title__
Useless title to template
__page__
misc
__lang__
en_US
__name__
fhcolor_picker
__seclev__
10000
__template__
<span id="[% id %]" class="fhcolor-picker">
<span class="trigger-swatch" style="display: none;"><span></span></span>
<ul class="menu" style="display: none">
	<li class="red"><span>red (best)</span></li>
	<li class="orange"><span>orange</span></li>
	<li class="yellow"><span>yellow</span></li>
	<li class="green"><span>green</span></li>
	<li class="blue"><span>blue</span></li>
	<li class="indigo"><span>indigo</span></li>
	<li class="violet"><span>violet</span></li>
	<li class="black"><span>black (all)</span></li>
</ul>
</span>
<script type="text/javascript">
$(function(){
var	$picker = $('#[% id %]'),
	$swatch	= $picker.find('span.trigger-swatch'),
	$menu	= $picker.find('ul.menu'),

	colors		= 'red orange yellow green blue indigo violet black',
	color_names	= colors.split(' '),
	color_index	= {};

$.each(color_names, function( i, name ){
	color_index[name] = i;
});
function neighboring_color( cn, offset ){
	return color_names[ pin_between(0, color_index[cn]+offset, color_names.length-1) ];
}

function color( expr, new_color ){
	return expr && $any(expr).data('color', new_color);
}
function show_color( new_color ){
	$swatch.removeClass(color($swatch)||colors).
		data('color', new_color).
		addClass(new_color).
		show().
		find('span').
			text($menu.find('li.'+new_color).text());
}
function save_color( new_color, expr ){
	var t = typeof(expr);
	if ( t==='number' ) {
		var start_color = arguments.length>1 ? new_color : color($picker);
		new_color = neighboring_color(start_color, expr);
	}
	if ( new_color ) {
		show_color(new_color);
		t==='boolean' && $picker.trigger('change', new_color);
	}
	return color($picker, new_color);
}
$picker.data('color_fn', save_color);

$menu.menu({
	triggers:	'#[% id %] span.trigger-swatch',
	cssNamespace:	'slash',

	start: function(){
		$menu.show();
	},
	over: function( e, ui ){
		show_color(color(ui.over));
	},
	select: function( e, ui ){
		var new_color = color(ui.select);
		if ( new_color !== color($picker) ) {
			save_color(new_color, true);
		}
	},
	out: function( e, ui ){
		(!ui.over && !ui.select && show_color(color($picker)));
	},
	stop: function(){
		$menu.hide();
	}
}).children().each(function(){
	color(this, this.className);
});

});
</script>
