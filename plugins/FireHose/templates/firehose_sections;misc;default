__section__
default
__description__
Template for generating the skinindexd template.  Uses an alternate
form of tags (<++> instead of [%%]) so it can write the standard tag
form into skinindexd.  Input:

* skins = arrayref of hashref of skin data (containing month,
	monthname, date, count, skin, rootdir)
* skin = name of parent skin

__title__

__page__
misc
__lang__
en_US
__name__
firehose_sections
__template__
[% fh = Slash.getObject("Slash::FireHose")
   sections = fh.getFireHoseSectionsMenu;
%]
[% cur_section_id = 0 %]
[% skip_edit = 0 %]
[% UNLESS (user.currentPage == "firehose" || user.currentPage == "index2" || user.currentPage == "console" || user.currentPage == "index");
	skip_edit = 1;
END %]
[% cur_section = fh.determineCurrentSection() %]
[% IF cur_section && cur_section.fsid; cur_section_id = cur_section.fsid; END %]
<ul id="firehose-sections">
	[% FOREACH fh_section= sections %]
		[% hide = 0 %]
		[% IF fh_section.user_display; fh_section.display = fh_section.user_display; END %]
		[% IF fh_section.user_section_name; fh_section.section_name = fh_section.user_section_name; END %]
		[% is_active = 0 %]
		[% IF fh_section.fsid == cur_section_id; is_active = 1; END %]
		[% IF (fh_section.display == "no" && is_active == 0); hide=1; END %]
		[% link_loc = gskin.rootdir _ "/firehose.pl?section=" _ fh_section.fsid %]
		[% IF fh_section.skid %]
			[% the_skin = Slash.db.getSkin(fh_section.skid) %]
			[% IF the_skin && the_skin.rootdir;
				link_loc = the_skin.rootdir;
			   END %]
		[% END %]
		<li [% IF is_active %] class="active"[% ELSIF hide %] class="hide"[% END %] id="fhsection-[% fh_section.fsid %]"><a id="fhsectiontitle-[% fh_section.fsid %]" href="[% link_loc %]">[% fh_section.section_name %]</a>[% IF !user.is_anon && !skip_edit %] <a class="links-sections-edit">[e]</a>[% END %]
		<script type="data">[% fh.js_anon_dump(fh_section.data); %]</script>
		</li>
	[% END %]
</ul>
[% IF !user.is_anon && (user.currentPage == "index2" || user.currentPage == "firehose" || user.currentPage == "console") && form.op != "view" %]<script type="text/javascript">
$(function(){
$.metadata.setType('elem', 'script');
$('#firehose-sections').
		click(function( event ){
			var	$target		= $(event.originalTarget),
				$li		= $target.closest('li[id^=fhsection-]'),
				section_id	= $li.metadata().id,
				is_unsaved	= section_id === 'unsaved',
				is_edit		= $target.closest('a.links-sections-edit').length;

			if ( is_edit && is_unsaved ) {
				edit_the_unsaved_section();
			} else if ( is_edit ) {
				getModalPrefs('firehoseview','Save Custom Section', 0, { id: section_id });
			} else if ( is_unsaved ) {
				firehose_set_options('setfhfilter', $li.metadata().filter);
				firehose_set_options('view', $li.metadata().viewname);
			} else {
				firehose_set_options('section', section_id);
			}
			return false;
		}).
		find('>li').
			each(function(){
				var md = $(this).metadata();
			}).
			find('a').
				removeAttr('href');
});
</script>[% END %]
__seclev__
1000
__version__
$Id$
